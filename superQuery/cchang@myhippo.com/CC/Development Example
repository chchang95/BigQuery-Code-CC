with claims_supp as (
select mon.*,
case when lag(date_close,1) over (partition by mon.claim_number order by month_knowledge) is not null and (loss_calculated_incurred_delta_this_month <> 0 or expense_calculated_incurred_delta_this_month <> 0) then 1 else 0 end as reopened_claim_count,
case when lag(date_close,1) over (partition by mon.claim_number order by month_knowledge) is null then 1 else 0 end as open_at_end_of_prior_month_count,
case when claim_closed_no_total_payment is true then 0
when lag(date_close,1) over (partition by mon.claim_number order by month_knowledge) is null then 1 else 0 end as open_at_end_of_prior_month_x_CNP_count
, case when cc.cat_ind is true then 'Y'
    when cc.cat_ind is false then 'N'
    when peril = 'wind' or peril = 'hail' then 'Y'
    when cat_code is not null then 'Y'
        else 'N' end as CAT
,coalesce(total_recoverable_depreciation,0) as total_recoverable_depreciation
,case when lag(coalesce(total_recoverable_depreciation,0)) over (partition by mon.claim_number order by month_knowledge) is null then coalesce(total_recoverable_depreciation,0)
else coalesce(total_recoverable_depreciation,0) - lag(coalesce(total_recoverable_depreciation,0)) over (partition by mon.claim_number order by month_knowledge) 
end as incremental_recoverable_depreciation
from dw_prod_extracts.ext_claim_monthly mon
left join dbt_cchin.cat_coding_20201130 cc on mon.claim_number = cc.claim_number
left join (select claim_id, date_knowledge, total_recoverable_depreciation from dw_prod_extracts.ext_claims_inception_to_date) citd on citd.claim_id = mon.claim_id and citd.date_knowledge = last_day(mon.month_knowledge,MONTH)
)
,x as (
select 
mon.claim_number,
month_knowledge
,month_of_loss as accident_month
,month_first_notice_of_loss as report_month
,state
,carrier
,product
,maturity
,peril
,CAT
-- ,claim_number
,sum(coalesce(loss_calculated_incurred_delta_this_month,0)) as incurred_loss_incremental
,sum(coalesce(expense_calculated_incurred_delta_this_month,0)) as incurred_expense_incremental
,sum(coalesce(total_incurred_delta_this_month,0)) as incurred_total_incremental

,sum(coalesce(loss_calculated_total_net_paid_delta_this_month,0)) as paid_loss_incremental
,sum(coalesce(expense_calculated_total_net_paid_delta_this_month,0)) as paid_expense_incremental
,sum(coalesce(total_calculated_net_paid_delta_this_month,0)) as paid_total_incremental

,sum(coalesce(loss_calculated_total_net_paid_inception_to_date,0)) as paid_loss_cumulative
,sum(coalesce(expense_calculated_total_net_paid_inception_to_date,0)) as paid_expense_cumulative
,sum(coalesce(total_calculated_net_paid_inception_to_date,0)) as paid_total_cumulative

,sum(coalesce(loss_calculated_net_reserve_corrected_delta_this_month,0)) as Change_in_Loss_Case_Reserves
,sum(coalesce(expense_calculated_net_reserve_delta_this_month,0)) as Change_in_Expense_Case_Reserves

,sum(coalesce(loss_calculated_net_reserve_corrected_inception_to_date,0)) as Outstanding_Loss_Case_Reserves
,sum(coalesce(expense_calculated_net_reserve_inception_to_date,0)) as Outstanding_Expense_Case_Reserves

,sum(coalesce(loss_calculated_incurred_inception_to_date,0)) as incurred_loss_cumulative
,sum(coalesce(expense_calculated_incurred_inception_to_date,0)) as incurred_expense_cumulative
,sum(coalesce(total_incurred_inception_to_date,0)) as incurred_total_cumulative
,sum(coalesce(total_recoverable_depreciation,0)) as outstanding_recoverable_depreciation
,sum(incremental_recoverable_depreciation) as incremental_recoverable_depreciation

,sum(case when total_incurred_inception_to_date >= 100000 and CAT = 'N' then 100000 else total_incurred_inception_to_date end) as Cumulative_Incurred_Total_Capped_At_100k_NonCat
,sum(case when total_incurred_inception_to_date >= 100000 and CAT = 'N' then total_incurred_inception_to_date - 100000 else 0 end) as Cumulative_Incurred_Total_Excess_of_100k_NonCat

,count(distinct mon.claim_number) as reported_claim_count
,sum(case when claim_closed_no_total_payment is true then 0 else 1 end) as reported_claim_count_x_CNP
,sum(case when claim_closed_no_total_payment is true then 0
            when total_incurred_inception_to_date >= 100000 and CAT = 'N' then 1 else 0 end) as reported_excess_of_100k_NonCat_claim_count_x_CNP

,sum(case when date_close is null then 1 else 0 end) as open_claim_count
,sum(coalesce(reopened_claim_count,0)) as reopened_claim_count
,sum(coalesce(open_at_end_of_prior_month_count,0)) as open_at_end_of_prior_month_count
,sum(coalesce(open_at_end_of_prior_month_x_CNP_count,0)) as open_at_end_of_prior_month_x_CNP_count

,sum(case when reopened_claim_count > 0 then total_incurred_delta_this_month else 0 end) as reopened_incurred_delta

,sum(case when date_close is null then 0 else 1 end) as closed_claim_count
from claims_supp mon
where 1=1
-- and month_of_loss = '2020-04-01'
-- and month_knowledge = '2020-11-01'
and carrier <> 'canopius'
and is_ebsl is false
group by 1,2,3,4,5,6,7,8,9,10
order by 1,2,3
)
select * from x
where 1=1
and month_knowledge = '2020-11-01'
and accident_month = '2020-04-01'
and incremental_recoverable_depreciation < 0
-- and report_month = '2020-07-01'
-- and open_at_end_of_prior_month_x_CNP_count > 0
-- and CAT = 'Y'
-- and claim_number = 'HIL-0403915-01-01'