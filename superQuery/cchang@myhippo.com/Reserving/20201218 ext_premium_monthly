with premium as (
    select 
        epud.policy_id
        ,lower(state) as state
        ,lower(carrier) as carrier
        ,lower(product) as product
        ,extract(year from date_calendar_month_accounting_basis) as calendar_year
        ,date_calendar_month_accounting_basis as date_accounting_start
        ,date_sub(date_add(date_calendar_month_accounting_basis, INTERVAL 1 MONTH), INTERVAL 1 DAY) as date_accounting_end
        ,reinsurance_treaty_property_accounting
        ,case when renewal_number = 0 then "New" else "Renewal" end as tenure
        ,date_trunc(date_effective, MONTH) as term_effective_month
        
        ,sum(written_base + written_total_optionals - written_optionals_equipment_breakdown - written_optionals_service_line) as written_prem_x_ebsl
        ,sum(earned_base + earned_total_optionals - earned_optionals_equipment_breakdown - earned_optionals_service_line) as earned_prem_x_ebsl
        
        ,sum(earned_base + earned_total_optionals + earned_policy_fee) as earned_prem_inc_ebsl_inc_pol_fees
        ,sum(written_base + written_total_optionals + written_policy_fee) as written_prem_inc_ebsl_inc_pol_fees
        
        ,sum(written_optionals_equipment_breakdown + written_optionals_service_line) as written_EBSL
        ,sum(earned_optionals_equipment_breakdown + earned_optionals_service_line) as earned_EBSL
        
        ,sum(written_exposure) as written_exposure
        ,sum(earned_exposure) as earned_exposure
        
        ,sum(written_policy_fee) as written_policy_fee
        ,sum(earned_policy_fee) as earned_policy_fee
        
        ,sum((written_base + written_total_optionals - written_optionals_equipment_breakdown - written_optionals_service_line) * coalesce(on_level_factor,1)) as on_leveled_written_prem_x_ebsl_x_pol_fees
        ,sum((earned_base + earned_total_optionals - earned_optionals_equipment_breakdown - earned_optionals_service_line) * coalesce(on_level_factor,1)) as on_leveled_earned_prem_x_ebsl_x_pol_fees
        
from dbt_cchin.ext_today_knowledge_policy_monthly_premiums_20201218 epud
    left join (select policy_id, on_level_factor from dw_staging_extracts.ext_policy_snapshots where date_snapshot = '2020-12-18') seps on seps.policy_id = epud.policy_id
        where date_knowledge = '2020-12-18'
        and carrier <> 'canopius'
group by 1,2,3,4,5,6,7,8,9,10
)
, aggregated as (
    select 
        state
        ,carrier
        ,product
        ,calendar_year
        ,date_accounting_start
        ,date_accounting_end
        -- ,reinsurance_treaty_property_accounting
        -- ,organization_id
        -- ,channel
        ,tenure
        ,term_effective_month
        -- ,rated_uw_action
        ,sum(written_prem_x_ebsl) as written_prem_x_ebsl_x_policy_fees
        ,sum(earned_prem_x_ebsl) as earned_prem_x_ebsl_x_policy_fees
        ,sum(written_prem_inc_ebsl_inc_pol_fees) as written_prem_inc_ebsl_inc_pol_fees
        ,sum(earned_prem_inc_ebsl_inc_pol_fees) as earned_prem_inc_ebsl_inc_pol_fees
        
        ,sum(written_EBSL) as written_EBSL
        ,sum(earned_EBSL) as earned_EBSL

        ,sum(written_exposure) as written_exposure
        ,sum(earned_exposure) as earned_exposure

        ,sum(written_policy_fee) as written_policy_fee
        ,sum(earned_policy_fee) as earned_policy_fee
        
        ,sum(on_leveled_written_prem_x_ebsl_x_pol_fees) as on_leveled_written_prem_x_ebsl_x_pol_fees
        ,sum(on_leveled_earned_prem_x_ebsl_x_pol_fees) as on_leveled_earned_prem_x_ebsl_x_pol_fees
        
from premium p
group by 1,2,3,4,5,6,7,8
)
, summary as (
    select 
        reinsurance_treaty_property_accounting,
        sum(written_prem_x_ebsl) as written_prem_x_ebsl
        ,sum(earned_prem_x_ebsl) as earned_prem_x_ebsl_inc_policy_fees
        ,sum(written_exposure) as written_exposure
        ,sum(earned_exposure) as earned_exposure
        ,sum(written_exposure * TIV) as written_TIV
        ,sum(earned_exposure * TIV) as earned_TIV
        ,sum(written_policy_fee) as written_policy_fee
        ,sum(earned_policy_fee) as earned_policy_fee
from premium p
left join (select policy_id, date_snapshot, coalesce(coverage_a,0) + coalesce(coverage_b,0) + coalesce(coverage_c,0) + coalesce(coverage_d,0) as TIV
      from dw_prod_extracts.ext_policy_snapshots) eps on p.policy_id = eps.policy_id and p.date_accounting_end = eps.date_snapshot
group by 1
)
select * from aggregated
where product <> 'ho5'
and date_accounting_start is not null